# app:
#   # Should be the same as backend.baseUrl when using the `app-backend` plugin.
#   baseUrl: http://localhost:7007

# backend:
#   # Note that the baseUrl should be the URL that the browser and other clients
#   # should use when communicating with the backend, i.e. it needs to be
#   # reachable not just from within the backend host, but from all of your
#   # callers. When its value is "http://localhost:7007", it's strictly private
#   # and can't be reached by others.
#   baseUrl: http://localhost:7007
#   # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
#   # all interfaces, the most permissive setting. The right value depends on your specific deployment.
#   listen: ':7007'

#   # config options: https://node-postgres.com/api/client
#   database:
#     client: pg
#     connection:
#       host: ${POSTGRES_HOST}
#       port: ${POSTGRES_PORT}
#       user: ${POSTGRES_USER}
#       password: ${POSTGRES_PASSWORD}

#   # https://node-postgres.com/features/ssl
#   # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
#   # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
#   # ssl:
#   #   ca: # if you have a CA file and want to verify it you can uncomment this section
#   #     $file: <file-path>/ca/server.crt

# catalog:
#   # Overrides the default list locations from app-config.yaml as these contain example data.
#   # See https://backstage.io/docs/features/software-catalog/software-catalog-overview#adding-components-to-the-catalog for more details
#   # on how to get entities into the catalog.
#   locations: []

app:
  title: Backstage App
  baseUrl: http://localhost:3000

organization:
  name: Tadashi

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
